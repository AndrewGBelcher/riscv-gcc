#!/usr/bin/env python

# RISC-V multilib list generator.
# Copyright (C) 2011-2017 Free Software Foundation, Inc.
# Contributed by Andrew Waterman (andrew@sifive.com).
# 
# This file is part of GCC.
# 
# GCC is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GCC is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# Each argument to this script is of the form
#  <primary arch>-<abi>-<additional arches>-<extensions>
# For example,
#  rv32imafd-ilp32d-rv32g-c,v,cv
# means that rv32imafdc, rv32imafdv, rv32imafdcv, rv32g, rv32gc, rv32gv,
# and rv32gcv can all use the rv32imafd-ilp32d libraries.
import sys
import collections

arches = collections.OrderedDict()
abis = collections.OrderedDict()
required = []
reuse = []

for cfg in sys.argv[1:]:
  (arch, abi, extra, ext) = cfg.split('-')
  arches[arch] = 1
  abis[abi] = 1
  extra = filter(lambda x: x, extra.split(','))
  ext = filter(lambda x: x, ext.split(','))
  alts = map(lambda x: [x] + map(lambda y: x + y, ext), [arch] + extra)
  for alt in sum(alts, [])[1:]:
    arches[alt] = 1
    reuse.append('march.%s/mabi.%s=march.%s/mabi.%s' % (arch, abi, alt, abi))
  required.append('march=%s/mabi=%s' % (arch, abi))

arch_options = '/'.join(map(lambda x: 'march=%s' % x, arches.keys()))
arch_dirnames = ' '.join(map(lambda x: 'lib%s' % x[2:4], arches.keys()))
arch_osdirnames = ' '.join(map(lambda x: '../lib%s' % x[2:4], arches.keys()))

abi_options = '/'.join(map(lambda x: 'mabi=%s' % x, abis.keys()))
abi_dirnames = ' '.join(abis.keys())
abi_osdirnames = abi_dirnames

prog = sys.argv[0].split('/')[-1]
print '# This file was generated by %s with the command: ' % prog
print '#  %s' % ' '.join(sys.argv)

print 'MULTILIB_OPTIONS = %s %s' % (arch_options, abi_options)
print 'MULTILIB_DIRNAMES = %s %s' % (arch_dirnames, abi_dirnames)
print 'MULTILIB_OSDIRNAMES = %s %s' % (arch_osdirnames, abi_osdirnames)
print 'MULTILIB_REQUIRED = %s' % ' '.join(required)
print 'MULTILIB_REUSE = %s' % ' '.join(reuse)
